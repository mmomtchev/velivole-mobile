diff --git a/node_modules/expo-notifications/android/src/main/java/expo/modules/notifications/NotificationsPackage.java b/node_modules/expo-notifications/android/src/main/java/expo/modules/notifications/NotificationsPackage.java
index 99ec0b5..197179b 100644
--- a/node_modules/expo-notifications/android/src/main/java/expo/modules/notifications/NotificationsPackage.java
+++ b/node_modules/expo-notifications/android/src/main/java/expo/modules/notifications/NotificationsPackage.java
@@ -27,6 +27,7 @@ import expo.modules.notifications.notifications.scheduling.NotificationScheduler
 import expo.modules.notifications.permissions.NotificationPermissionsModule;
 import expo.modules.notifications.tokens.PushTokenManager;
 import expo.modules.notifications.tokens.PushTokenModule;
+import expo.modules.notifications.topics.TopicSubscribeModule;
 
 public class NotificationsPackage extends BasePackage {
   @Override
@@ -34,6 +35,7 @@ public class NotificationsPackage extends BasePackage {
     return Arrays.asList(
       new BadgeModule(context),
       new PushTokenModule(context),
+      new TopicSubscribeModule(context),
       new NotificationsEmitter(context),
       new NotificationsHandler(context),
       new NotificationScheduler(context),
diff --git a/node_modules/expo-notifications/android/src/main/java/expo/modules/notifications/topics/TopicSubscribeModule.java b/node_modules/expo-notifications/android/src/main/java/expo/modules/notifications/topics/TopicSubscribeModule.java
new file mode 100644
index 0000000..81162b2
--- /dev/null
+++ b/node_modules/expo-notifications/android/src/main/java/expo/modules/notifications/topics/TopicSubscribeModule.java
@@ -0,0 +1,54 @@
+package expo.modules.notifications.topics;
+
+import android.content.Context;
+import android.os.Bundle;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.messaging.FirebaseMessaging;
+
+import expo.modules.core.ExportedModule;
+import expo.modules.core.ModuleRegistry;
+import expo.modules.core.Promise;
+import expo.modules.core.interfaces.ExpoMethod;
+
+import androidx.annotation.NonNull;
+
+public class TopicSubscribeModule extends ExportedModule {
+  private final static String EXPORTED_NAME = "ExpoTopicSubscribeModule";
+
+  private final static String TOPIC_SUBSCRIBE_FAIL_CODE = "E_TOPIC_SUBSCRIBE_FAILED";
+
+  public TopicSubscribeModule(Context context) {
+    super(context);
+  }
+
+  @Override
+  public String getName() {
+    return EXPORTED_NAME;
+  }
+
+  /**
+   * Subscribe to a topic
+   *
+   * @param promise Promise to be resolved when the operation completes
+   */
+  @ExpoMethod
+  public void topicSubscribeAsync(final String topic, final Promise promise) {
+    FirebaseMessaging.getInstance().subscribeToTopic(topic)
+        .addOnCompleteListener(new OnCompleteListener<Void>() {
+          @Override
+          public void onComplete(@NonNull Task<Void> task) {
+            if (!task.isSuccessful()) {
+              if (task.getException() == null) {
+                promise.reject(TOPIC_SUBSCRIBE_FAIL_CODE, "Subscribing to the topic failed.");
+              } else {
+                promise.reject(TOPIC_SUBSCRIBE_FAIL_CODE, "Subscribing to the topic failed: " + task.getException().getMessage(), task.getException());
+              }
+              return;
+            }
+            promise.resolve(null);
+          }
+        });
+  }
+}
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.android.d.ts b/node_modules/expo-notifications/build/TopicSubscribeModule.android.d.ts
new file mode 100644
index 0000000..6f204ab
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.android.d.ts
@@ -0,0 +1,4 @@
+import { TopicSubscribeModule } from './TopicSubscribeModule.types';
+declare const _default: TopicSubscribeModule;
+export default _default;
+//# sourceMappingURL=TopicSubscribeModule.android.d.ts.map
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.android.d.ts.map b/node_modules/expo-notifications/build/TopicSubscribeModule.android.d.ts.map
new file mode 100644
index 0000000..897f8ec
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.android.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TopicSubscribeModule.android.d.ts","sourceRoot":"","sources":["../src/TopicSubscribeModule.android.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;;AAGpE,wBAAsF"}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.android.js b/node_modules/expo-notifications/build/TopicSubscribeModule.android.js
new file mode 100644
index 0000000..e15e99b
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.android.js
@@ -0,0 +1,4 @@
+import { NativeModulesProxy } from 'expo-modules-core';
+console.log(NativeModulesProxy.ExpoTopicSubscribeModule);
+export default NativeModulesProxy.ExpoTopicSubscribeModule;
+//# sourceMappingURL=TopicSubscribeModule.android.js.map
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.android.js.map b/node_modules/expo-notifications/build/TopicSubscribeModule.android.js.map
new file mode 100644
index 0000000..94eba61
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.android.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"TopicSubscribeModule.android.js","sourceRoot":"","sources":["../src/TopicSubscribeModule.android.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AAIvD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAChC,eAAe,kBAAkB,CAAC,oBAAmD,CAAC","sourcesContent":["import { NativeModulesProxy } from 'expo-modules-core';\n\nimport { TopicSubscribeModule } from './TopicSubscribeModule.types';\n\nconsole.log(NativeModulesProxy);\nexport default NativeModulesProxy.TopicSubscribeModule as any as TopicSubscribeModule;\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.d.ts b/node_modules/expo-notifications/build/TopicSubscribeModule.d.ts
new file mode 100644
index 0000000..ee6daed
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.d.ts
@@ -0,0 +1,4 @@
+import { TopicSubscribeModule } from './TopicSubscribeModule.types';
+declare const _default: TopicSubscribeModule;
+export default _default;
+//# sourceMappingURL=TopicSubscribeModule.d.ts.map
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.d.ts.map b/node_modules/expo-notifications/build/TopicSubscribeModule.d.ts.map
new file mode 100644
index 0000000..b4f428f
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TopicSubscribeModule.d.ts","sourceRoot":"","sources":["../src/TopicSubscribeModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;;AAIpE,wBAc0B"}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.js b/node_modules/expo-notifications/build/TopicSubscribeModule.js
new file mode 100644
index 0000000..51de4d8
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.js
@@ -0,0 +1,15 @@
+let warningHasBeenShown = false;
+export default {
+    addListener: () => { },
+    removeListeners: () => { },
+    topicSubscribeAsync: () => {
+        if (!warningHasBeenShown) {
+            console.warn(`[expo-notifications] Subscribing to broadcast topics is supported only on Android.`);
+            warningHasBeenShown = true;
+        }
+        // Shouldn't this be a rejection?
+        // expo design principles say no
+        return Promise.resolve();
+    },
+};
+//# sourceMappingURL=TopicSubscribeModule.js.map
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.js.map b/node_modules/expo-notifications/build/TopicSubscribeModule.js.map
new file mode 100644
index 0000000..a5f6061
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"TopicSubscribeModule.js","sourceRoot":"","sources":["../src/TopicSubscribeModule.ts"],"names":[],"mappings":"AAEA,IAAI,mBAAmB,GAAG,KAAK,CAAC;AAEhC,eAAe;IACb,WAAW,EAAE,GAAG,EAAE,GAAE,CAAC;IACrB,eAAe,EAAE,GAAG,EAAE,GAAE,CAAC;IACzB,mBAAmB,EAAE,GAAG,EAAE;QACxB,IAAI,CAAC,mBAAmB,EAAE;YACxB,OAAO,CAAC,IAAI,CACV,oFAAoF,CACrF,CAAC;YACF,mBAAmB,GAAG,IAAI,CAAC;SAC5B;QACD,iCAAiC;QACjC,gCAAgC;QAChC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;CACsB,CAAC","sourcesContent":["import { TopicSubscribeModule } from './TopicSubscribeModule.types';\n\nlet warningHasBeenShown = false;\n\nexport default {\n  addListener: () => {},\n  removeListeners: () => {},\n  topicSubscribeAsync: () => {\n    if (!warningHasBeenShown) {\n      console.warn(\n        `[expo-notifications] Subscribing to broadcast topics is supported only on Android.`\n      );\n      warningHasBeenShown = true;\n    }\n    // Shouldn't this be a rejection?\n    // expo design principles say no\n    return Promise.resolve();\n  },\n} as TopicSubscribeModule;\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.types.d.ts b/node_modules/expo-notifications/build/TopicSubscribeModule.types.d.ts
new file mode 100644
index 0000000..938fe88
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.types.d.ts
@@ -0,0 +1,5 @@
+import { ProxyNativeModule } from 'expo-modules-core';
+export interface TopicSubscribeModule extends ProxyNativeModule {
+    topicSubscribeAsync?: (topic: string) => Promise<void>;
+}
+//# sourceMappingURL=TopicSubscribeModule.types.d.ts.map
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.types.d.ts.map b/node_modules/expo-notifications/build/TopicSubscribeModule.types.d.ts.map
new file mode 100644
index 0000000..34b8b44
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.types.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TopicSubscribeModule.types.d.ts","sourceRoot":"","sources":["../src/TopicSubscribeModule.types.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAEtD,MAAM,WAAW,oBAAqB,SAAQ,iBAAiB;IAC7D,mBAAmB,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC;CACxD"}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.types.js b/node_modules/expo-notifications/build/TopicSubscribeModule.types.js
new file mode 100644
index 0000000..b556bf4
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.types.js
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=TopicSubscribeModule.types.js.map
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/TopicSubscribeModule.types.js.map b/node_modules/expo-notifications/build/TopicSubscribeModule.types.js.map
new file mode 100644
index 0000000..bcdf3f7
--- /dev/null
+++ b/node_modules/expo-notifications/build/TopicSubscribeModule.types.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"TopicSubscribeModule.types.js","sourceRoot":"","sources":["../src/TopicSubscribeModule.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ProxyNativeModule } from 'expo-modules-core';\n\nexport interface TopicSubscribeModule extends ProxyNativeModule {\n  topicSubscribeAsync?: (topic: string) => Promise<void>;\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/index.d.ts b/node_modules/expo-notifications/build/index.d.ts
index 599247b..4db4078 100644
--- a/node_modules/expo-notifications/build/index.d.ts
+++ b/node_modules/expo-notifications/build/index.d.ts
@@ -1,5 +1,6 @@
 export { default as getDevicePushTokenAsync } from './getDevicePushTokenAsync';
 export { default as getExpoPushTokenAsync } from './getExpoPushTokenAsync';
+export { default as topicSubscribeAsync } from './topicSubscribeAsync';
 export { default as getPresentedNotificationsAsync } from './getPresentedNotificationsAsync';
 export { default as presentNotificationAsync } from './presentNotificationAsync';
 export { default as dismissNotificationAsync } from './dismissNotificationAsync';
diff --git a/node_modules/expo-notifications/build/index.d.ts.map b/node_modules/expo-notifications/build/index.d.ts.map
index d81d78e..d9b429c 100644
--- a/node_modules/expo-notifications/build/index.d.ts.map
+++ b/node_modules/expo-notifications/build/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,OAAO,IAAI,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAC3E,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,OAAO,IAAI,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AACnG,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,mCAAmC,EAAE,MAAM,uCAAuC,CAAC;AACvG,OAAO,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AACrE,OAAO,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AACrE,OAAO,EAAE,OAAO,IAAI,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AACnG,OAAO,EAAE,OAAO,IAAI,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACnF,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,oCAAoC,EAAE,MAAM,wCAAwC,CAAC;AACzG,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,+BAA+B,EAAE,MAAM,mCAAmC,CAAC;AAC/F,OAAO,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,qCAAqC,EAAE,MAAM,sCAAsC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACnE,OAAO,EAAE,OAAO,IAAI,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACvE,cAAc,gBAAgB,CAAC;AAC/B,cAAc,wBAAwB,CAAC;AACvC,cAAc,wBAAwB,CAAC;AACvC,cAAc,2BAA2B,CAAC;AAC1C,cAAc,yCAAyC,CAAC;AACxD,cAAc,oCAAoC,CAAC;AACnD,cAAc,iCAAiC,CAAC;AAChD,cAAc,uBAAuB,CAAC;AACtC,cAAc,gBAAgB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,OAAO,IAAI,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAC3E,OAAO,EAAE,OAAO,IAAI,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACvE,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,OAAO,IAAI,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AACnG,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,mCAAmC,EAAE,MAAM,uCAAuC,CAAC;AACvG,OAAO,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AACrE,OAAO,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AACrE,OAAO,EAAE,OAAO,IAAI,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AACnG,OAAO,EAAE,OAAO,IAAI,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACnF,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,oCAAoC,EAAE,MAAM,wCAAwC,CAAC;AACzG,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,+BAA+B,EAAE,MAAM,mCAAmC,CAAC;AAC/F,OAAO,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,qCAAqC,EAAE,MAAM,sCAAsC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACnE,OAAO,EAAE,OAAO,IAAI,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACvE,cAAc,gBAAgB,CAAC;AAC/B,cAAc,wBAAwB,CAAC;AACvC,cAAc,wBAAwB,CAAC;AACvC,cAAc,2BAA2B,CAAC;AAC1C,cAAc,yCAAyC,CAAC;AACxD,cAAc,oCAAoC,CAAC;AACnD,cAAc,iCAAiC,CAAC;AAChD,cAAc,uBAAuB,CAAC;AACtC,cAAc,gBAAgB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/index.js b/node_modules/expo-notifications/build/index.js
index 6bad0ed..d914a78 100644
--- a/node_modules/expo-notifications/build/index.js
+++ b/node_modules/expo-notifications/build/index.js
@@ -1,5 +1,6 @@
 export { default as getDevicePushTokenAsync } from './getDevicePushTokenAsync';
 export { default as getExpoPushTokenAsync } from './getExpoPushTokenAsync';
+export { default as topicSubscribeAsync } from './topicSubscribeAsync';
 export { default as getPresentedNotificationsAsync } from './getPresentedNotificationsAsync';
 export { default as presentNotificationAsync } from './presentNotificationAsync';
 export { default as dismissNotificationAsync } from './dismissNotificationAsync';
diff --git a/node_modules/expo-notifications/build/index.js.map b/node_modules/expo-notifications/build/index.js.map
index 1e0b8d4..903d823 100644
--- a/node_modules/expo-notifications/build/index.js.map
+++ b/node_modules/expo-notifications/build/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,OAAO,IAAI,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAC3E,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,OAAO,IAAI,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AACnG,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,mCAAmC,EAAE,MAAM,uCAAuC,CAAC;AACvG,OAAO,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AACrE,OAAO,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AACrE,OAAO,EAAE,OAAO,IAAI,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AACnG,OAAO,EAAE,OAAO,IAAI,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACnF,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,oCAAoC,EAAE,MAAM,wCAAwC,CAAC;AACzG,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,+BAA+B,EAAE,MAAM,mCAAmC,CAAC;AAC/F,OAAO,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,qCAAqC,EAAE,MAAM,sCAAsC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACnE,OAAO,EAAE,OAAO,IAAI,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACvE,cAAc,gBAAgB,CAAC;AAC/B,cAAc,wBAAwB,CAAC;AACvC,cAAc,wBAAwB,CAAC;AACvC,cAAc,2BAA2B,CAAC;AAC1C,cAAc,yCAAyC,CAAC;AACxD,cAAc,oCAAoC,CAAC;AACnD,cAAc,iCAAiC,CAAC;AAChD,cAAc,uBAAuB,CAAC;AACtC,cAAc,gBAAgB,CAAC","sourcesContent":["export { default as getDevicePushTokenAsync } from './getDevicePushTokenAsync';\nexport { default as getExpoPushTokenAsync } from './getExpoPushTokenAsync';\nexport { default as getPresentedNotificationsAsync } from './getPresentedNotificationsAsync';\nexport { default as presentNotificationAsync } from './presentNotificationAsync';\nexport { default as dismissNotificationAsync } from './dismissNotificationAsync';\nexport { default as dismissAllNotificationsAsync } from './dismissAllNotificationsAsync';\nexport { default as getNotificationChannelsAsync } from './getNotificationChannelsAsync';\nexport { default as getNotificationChannelAsync } from './getNotificationChannelAsync';\nexport { default as setNotificationChannelAsync } from './setNotificationChannelAsync';\nexport { default as deleteNotificationChannelAsync } from './deleteNotificationChannelAsync';\nexport { default as getNotificationChannelGroupsAsync } from './getNotificationChannelGroupsAsync';\nexport { default as getNotificationChannelGroupAsync } from './getNotificationChannelGroupAsync';\nexport { default as setNotificationChannelGroupAsync } from './setNotificationChannelGroupAsync';\nexport { default as deleteNotificationChannelGroupAsync } from './deleteNotificationChannelGroupAsync';\nexport { default as getBadgeCountAsync } from './getBadgeCountAsync';\nexport { default as setBadgeCountAsync } from './setBadgeCountAsync';\nexport { default as getAllScheduledNotificationsAsync } from './getAllScheduledNotificationsAsync';\nexport { default as scheduleNotificationAsync } from './scheduleNotificationAsync';\nexport { default as cancelScheduledNotificationAsync } from './cancelScheduledNotificationAsync';\nexport { default as cancelAllScheduledNotificationsAsync } from './cancelAllScheduledNotificationsAsync';\nexport { default as getNotificationCategoriesAsync } from './getNotificationCategoriesAsync';\nexport { default as setNotificationCategoryAsync } from './setNotificationCategoryAsync';\nexport { default as deleteNotificationCategoryAsync } from './deleteNotificationCategoryAsync';\nexport { default as getNextTriggerDateAsync } from './getNextTriggerDateAsync';\nexport { default as useLastNotificationResponse } from './useLastNotificationResponse';\nexport { setAutoServerRegistrationEnabledAsync } from './DevicePushTokenAutoRegistration.fx';\nexport { default as registerTaskAsync } from './registerTaskAsync';\nexport { default as unregisterTaskAsync } from './unregisterTaskAsync';\nexport * from './TokenEmitter';\nexport * from './NotificationsEmitter';\nexport * from './NotificationsHandler';\nexport * from './NotificationPermissions';\nexport * from './NotificationChannelGroupManager.types';\nexport * from './NotificationChannelManager.types';\nexport * from './NotificationPermissions.types';\nexport * from './Notifications.types';\nexport * from './Tokens.types';\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,OAAO,IAAI,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAC3E,OAAO,EAAE,OAAO,IAAI,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACvE,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,OAAO,IAAI,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACjF,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AACnG,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,mCAAmC,EAAE,MAAM,uCAAuC,CAAC;AACvG,OAAO,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AACrE,OAAO,EAAE,OAAO,IAAI,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AACrE,OAAO,EAAE,OAAO,IAAI,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AACnG,OAAO,EAAE,OAAO,IAAI,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACnF,OAAO,EAAE,OAAO,IAAI,gCAAgC,EAAE,MAAM,oCAAoC,CAAC;AACjG,OAAO,EAAE,OAAO,IAAI,oCAAoC,EAAE,MAAM,wCAAwC,CAAC;AACzG,OAAO,EAAE,OAAO,IAAI,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AACzF,OAAO,EAAE,OAAO,IAAI,+BAA+B,EAAE,MAAM,mCAAmC,CAAC;AAC/F,OAAO,EAAE,OAAO,IAAI,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EAAE,OAAO,IAAI,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AACvF,OAAO,EAAE,qCAAqC,EAAE,MAAM,sCAAsC,CAAC;AAC7F,OAAO,EAAE,OAAO,IAAI,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACnE,OAAO,EAAE,OAAO,IAAI,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACvE,cAAc,gBAAgB,CAAC;AAC/B,cAAc,wBAAwB,CAAC;AACvC,cAAc,wBAAwB,CAAC;AACvC,cAAc,2BAA2B,CAAC;AAC1C,cAAc,yCAAyC,CAAC;AACxD,cAAc,oCAAoC,CAAC;AACnD,cAAc,iCAAiC,CAAC;AAChD,cAAc,uBAAuB,CAAC;AACtC,cAAc,gBAAgB,CAAC","sourcesContent":["export { default as getDevicePushTokenAsync } from './getDevicePushTokenAsync';\nexport { default as getExpoPushTokenAsync } from './getExpoPushTokenAsync';\nexport { default as topicSubscribeAsync } from './topicSubscribeAsync';\nexport { default as getPresentedNotificationsAsync } from './getPresentedNotificationsAsync';\nexport { default as presentNotificationAsync } from './presentNotificationAsync';\nexport { default as dismissNotificationAsync } from './dismissNotificationAsync';\nexport { default as dismissAllNotificationsAsync } from './dismissAllNotificationsAsync';\nexport { default as getNotificationChannelsAsync } from './getNotificationChannelsAsync';\nexport { default as getNotificationChannelAsync } from './getNotificationChannelAsync';\nexport { default as setNotificationChannelAsync } from './setNotificationChannelAsync';\nexport { default as deleteNotificationChannelAsync } from './deleteNotificationChannelAsync';\nexport { default as getNotificationChannelGroupsAsync } from './getNotificationChannelGroupsAsync';\nexport { default as getNotificationChannelGroupAsync } from './getNotificationChannelGroupAsync';\nexport { default as setNotificationChannelGroupAsync } from './setNotificationChannelGroupAsync';\nexport { default as deleteNotificationChannelGroupAsync } from './deleteNotificationChannelGroupAsync';\nexport { default as getBadgeCountAsync } from './getBadgeCountAsync';\nexport { default as setBadgeCountAsync } from './setBadgeCountAsync';\nexport { default as getAllScheduledNotificationsAsync } from './getAllScheduledNotificationsAsync';\nexport { default as scheduleNotificationAsync } from './scheduleNotificationAsync';\nexport { default as cancelScheduledNotificationAsync } from './cancelScheduledNotificationAsync';\nexport { default as cancelAllScheduledNotificationsAsync } from './cancelAllScheduledNotificationsAsync';\nexport { default as getNotificationCategoriesAsync } from './getNotificationCategoriesAsync';\nexport { default as setNotificationCategoryAsync } from './setNotificationCategoryAsync';\nexport { default as deleteNotificationCategoryAsync } from './deleteNotificationCategoryAsync';\nexport { default as getNextTriggerDateAsync } from './getNextTriggerDateAsync';\nexport { default as useLastNotificationResponse } from './useLastNotificationResponse';\nexport { setAutoServerRegistrationEnabledAsync } from './DevicePushTokenAutoRegistration.fx';\nexport { default as registerTaskAsync } from './registerTaskAsync';\nexport { default as unregisterTaskAsync } from './unregisterTaskAsync';\nexport * from './TokenEmitter';\nexport * from './NotificationsEmitter';\nexport * from './NotificationsHandler';\nexport * from './NotificationPermissions';\nexport * from './NotificationChannelGroupManager.types';\nexport * from './NotificationChannelManager.types';\nexport * from './NotificationPermissions.types';\nexport * from './Notifications.types';\nexport * from './Tokens.types';\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/topicSubscribeAsync.d.ts b/node_modules/expo-notifications/build/topicSubscribeAsync.d.ts
new file mode 100644
index 0000000..da437b7
--- /dev/null
+++ b/node_modules/expo-notifications/build/topicSubscribeAsync.d.ts
@@ -0,0 +1,2 @@
+export default function topicSubscribeAsync(topic: string): Promise<void>;
+//# sourceMappingURL=topicSubscribeAsync.d.ts.map
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/topicSubscribeAsync.d.ts.map b/node_modules/expo-notifications/build/topicSubscribeAsync.d.ts.map
new file mode 100644
index 0000000..5d0d168
--- /dev/null
+++ b/node_modules/expo-notifications/build/topicSubscribeAsync.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"topicSubscribeAsync.d.ts","sourceRoot":"","sources":["../src/topicSubscribeAsync.ts"],"names":[],"mappings":"AAIA,wBAA8B,mBAAmB,CAAC,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAM9E"}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/topicSubscribeAsync.js b/node_modules/expo-notifications/build/topicSubscribeAsync.js
new file mode 100644
index 0000000..571be29
--- /dev/null
+++ b/node_modules/expo-notifications/build/topicSubscribeAsync.js
@@ -0,0 +1,9 @@
+import { UnavailabilityError } from 'expo-modules-core';
+import TopicSubscribeModule from './TopicSubscribeModule';
+export default async function topicSubscribeAsync(topic) {
+    if (!TopicSubscribeModule.topicSubscribeAsync) {
+        throw new UnavailabilityError('ExpoNotifications', 'topicSubscribeAsync');
+    }
+    return TopicSubscribeModule.topicSubscribeAsync(topic);
+}
+//# sourceMappingURL=topicSubscribeAsync.js.map
\ No newline at end of file
diff --git a/node_modules/expo-notifications/build/topicSubscribeAsync.js.map b/node_modules/expo-notifications/build/topicSubscribeAsync.js.map
new file mode 100644
index 0000000..4d2db09
--- /dev/null
+++ b/node_modules/expo-notifications/build/topicSubscribeAsync.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"topicSubscribeAsync.js","sourceRoot":"","sources":["../src/topicSubscribeAsync.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AAExD,OAAO,oBAAoB,MAAM,wBAAwB,CAAC;AAE1D,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,mBAAmB,CAAC,KAAa;IAC7D,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,EAAE;QAC7C,MAAM,IAAI,mBAAmB,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;KAC3E;IAED,OAAO,oBAAoB,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AACzD,CAAC","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport TopicSubscribeModule from './TopicSubscribeModule';\n\nexport default async function topicSubscribeAsync(topic: string): Promise<void> {\n  if (!TopicSubscribeModule.topicSubscribeAsync) {\n    throw new UnavailabilityError('ExpoNotifications', 'topicSubscribeAsync');\n  }\n\n  return TopicSubscribeModule.topicSubscribeAsync(topic);\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-notifications/src/TopicSubscribeModule.android.ts b/node_modules/expo-notifications/src/TopicSubscribeModule.android.ts
new file mode 100644
index 0000000..89068d6
--- /dev/null
+++ b/node_modules/expo-notifications/src/TopicSubscribeModule.android.ts
@@ -0,0 +1,5 @@
+import { NativeModulesProxy } from 'expo-modules-core';
+
+import { TopicSubscribeModule } from './TopicSubscribeModule.types';
+
+export default NativeModulesProxy.ExpoTopicSubscribeModule as any as TopicSubscribeModule;
diff --git a/node_modules/expo-notifications/src/TopicSubscribeModule.ts b/node_modules/expo-notifications/src/TopicSubscribeModule.ts
new file mode 100644
index 0000000..52a0bc1
--- /dev/null
+++ b/node_modules/expo-notifications/src/TopicSubscribeModule.ts
@@ -0,0 +1,19 @@
+import { TopicSubscribeModule } from './TopicSubscribeModule.types';
+
+let warningHasBeenShown = false;
+
+export default {
+  addListener: () => {},
+  removeListeners: () => {},
+  topicSubscribeAsync: () => {
+    if (!warningHasBeenShown) {
+      console.warn(
+        `[expo-notifications] Subscribing to broadcast topics is supported only on Android.`
+      );
+      warningHasBeenShown = true;
+    }
+    // Shouldn't this be a rejection?
+    // expo design principles say no
+    return Promise.resolve();
+  },
+} as TopicSubscribeModule;
diff --git a/node_modules/expo-notifications/src/TopicSubscribeModule.types.ts b/node_modules/expo-notifications/src/TopicSubscribeModule.types.ts
new file mode 100644
index 0000000..27e0141
--- /dev/null
+++ b/node_modules/expo-notifications/src/TopicSubscribeModule.types.ts
@@ -0,0 +1,5 @@
+import { ProxyNativeModule } from 'expo-modules-core';
+
+export interface TopicSubscribeModule extends ProxyNativeModule {
+  topicSubscribeAsync?: (topic: string) => Promise<void>;
+}
diff --git a/node_modules/expo-notifications/src/index.ts b/node_modules/expo-notifications/src/index.ts
index 3d759f6..29f5130 100644
--- a/node_modules/expo-notifications/src/index.ts
+++ b/node_modules/expo-notifications/src/index.ts
@@ -1,5 +1,6 @@
 export { default as getDevicePushTokenAsync } from './getDevicePushTokenAsync';
 export { default as getExpoPushTokenAsync } from './getExpoPushTokenAsync';
+export { default as topicSubscribeAsync } from './topicSubscribeAsync';
 export { default as getPresentedNotificationsAsync } from './getPresentedNotificationsAsync';
 export { default as presentNotificationAsync } from './presentNotificationAsync';
 export { default as dismissNotificationAsync } from './dismissNotificationAsync';
diff --git a/node_modules/expo-notifications/src/topicSubscribeAsync.ts b/node_modules/expo-notifications/src/topicSubscribeAsync.ts
new file mode 100644
index 0000000..cd594c3
--- /dev/null
+++ b/node_modules/expo-notifications/src/topicSubscribeAsync.ts
@@ -0,0 +1,11 @@
+import { UnavailabilityError } from 'expo-modules-core';
+
+import TopicSubscribeModule from './TopicSubscribeModule';
+
+export default async function topicSubscribeAsync(topic: string): Promise<void> {
+  if (!TopicSubscribeModule.topicSubscribeAsync) {
+    throw new UnavailabilityError('ExpoNotifications', 'topicSubscribeAsync');
+  }
+
+  return TopicSubscribeModule.topicSubscribeAsync(topic);
+}
